name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  S3_BUCKET: calvobit
  POSTER_FUNCTION: calvin-bot-poster
  FETCHER_FUNCTION: calvin-bot-fetcher

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        flake8 . --extend-ignore=W503,E203 --max-line-length=120 --exclude=.git,__pycache__,.venv
      continue-on-error: true
    
    - name: Run tests
      env:
        BLUESKY_USERNAME: ${{ secrets.BLUESKY_USERNAME }}
        BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
        USE_S3_STORAGE: false
      run: |
        python -m pytest

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run security scan
      run: |
        bandit -r app/ -ll || true
        safety check --full-report || true

  deploy:
    runs-on: ubuntu-22.04
    needs: [test, security]
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Verify AWS Identity
      run: aws sts get-caller-identity

    - name: Check AWS CLI Installation
      run: |
        if command -v aws &> /dev/null; then
          echo "AWS_CLI_EXISTS=true" >> $GITHUB_ENV
        else
          echo "AWS_CLI_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Install or Update AWS CLI
      run: |
        if [[ "$AWS_CLI_EXISTS" == "false" ]]; then
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
        else
          echo "AWS CLI is already installed, skipping update."
        fi

    - name: Verify AWS CLI Version
      run: aws --version

    - name: Make build script executable
      run: chmod +x build_lambda.sh

    - name: Build and package Lambda functions (Uploads to S3)
      run: ./build_lambda.sh

    - name: Deploy calvin-bot-poster Lambda function
      run: |
        aws lambda update-function-code --function-name $POSTER_FUNCTION \
          --s3-bucket $S3_BUCKET --s3-key lambda/calvin-bot.zip

    - name: Deploy calvin-bot-fetcher Lambda function
      run: |
        aws lambda update-function-code --function-name $FETCHER_FUNCTION \
          --s3-bucket $S3_BUCKET --s3-key lambda/calvin-bot.zip